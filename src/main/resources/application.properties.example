# ===================================
# Expense App Backend 設定範例
# 請複製此檔案為 application.properties 並填入真實資訊
# ===================================

# ===================================
# 資料庫設定
# ===================================
spring.datasource.url=jdbc:mysql://localhost:3306/expense_db
spring.datasource.username=root
spring.datasource.password=請填入你的MySQL密碼
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# ===================================
# JPA 設定
# ===================================
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.open-in-view=false
spring.jpa.properties.hibernate.format_sql=true

# ===================================
# Swagger OpenAPI
# ===================================
springdoc.api-docs.enabled=true
springdoc.swagger-ui.enabled=true

# ===================================
# JWT 設定
# ===================================
# 請使用線上工具產生至少 256 位元的密鑰
# 推薦工具：https://www.allkeysgenerator.com/Random/Security-Encryption-Key-Generator.aspx
jwt.secret=請填入至少256位元的密鑰
jwt.expiration=3600000
# 1 小時 = 3600000 毫秒

# ===================================
# Email 設定（Mailtrap 測試用）
# ===================================
# 註冊 Mailtrap：https://mailtrap.io
spring.mail.host=smtp.mailtrap.io
spring.mail.port=2525
spring.mail.username=請填入你的Mailtrap_username
spring.mail.password=請填入你的Mailtrap_password
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# Email 寄件人資訊
app.email.from=noreply@expenseapp.com
app.email.from-name=Expense App

# ===================================
# 應用程式設定
# ===================================
# 前端網址（用於 Email 連結）
app.frontend.url=http://localhost:8080

# Token 有效期設定
app.token.email-verification.expiration=86400000
# Email 驗證 24 小時 = 86400000 毫秒

app.token.password-reset.expiration=3600000
# 密碼重設 1 小時 = 3600000 毫秒

# ===================================
# Google OAuth 設定
# ===================================
# 1. 前往 Google Cloud Console: https://console.cloud.google.com/
# 2. 建立專案
# 3. 啟用 Google+ API
# 4. 建立 OAuth 2.0 憑證
# 5. 設定重新導向 URI: http://localhost:8080/login/oauth2/code/google
# 6. 複製 Client ID 和 Client Secret

spring.security.oauth2.client.registration.google.client-id=請填入你的Google_Client_ID.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=請填入你的Google_Client_Secret
spring.security.oauth2.client.registration.google.scope=profile,email

# ===================================
# 日誌設定（選擇性）
# ===================================
# 開發時可以啟用，生產環境建議關閉
# logging.level.org.springframework.security=DEBUG
# logging.level.org.springframework.security.oauth2=DEBUG

# ===================================
# 生產環境額外設定（部署時使用）
# ===================================
# server.port=8080
# spring.jpa.hibernate.ddl-auto=validate
# spring.jpa.show-sql=false
# springdoc.swagger-ui.enabled=false
# springdoc.api-docs.enabled=false